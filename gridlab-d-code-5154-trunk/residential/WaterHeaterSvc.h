#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Xml.dll>
#using <System.Web.Services.dll>
#using <System.EnterpriseServices.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace WaterHeaterSvc {
    using namespace System::Xml::Serialization;
    using namespace System::Web::Services;
    using namespace System::ComponentModel;
    using namespace System::Web::Services::Protocols;
    using namespace System;
    using namespace System::Diagnostics;
    
    using namespace System;
    ref class WHeaterImpl;
    ref class WHcreateCompletedEventArgs;
    ref class WHinitCompletedEventArgs;
    ref class WHsyncCompletedEventArgs;
    ref class WHcommitCompletedEventArgs;
    ref class WHtank_stateCompletedEventArgs;
    ref class WHpostsyncCompletedEventArgs;
    ref class WHset_current_model_and_load_stateCompletedEventArgs;
    ref class WHdhdtCompletedEventArgs;
    ref class WHactual_kWCompletedEventArgs;
    ref class WHnew_time_1nodeCompletedEventArgs;
    ref class WHnew_temp_1nodeCompletedEventArgs;
    ref class WHnew_time_2zoneCompletedEventArgs;
    ref class WHnew_h_2zoneCompletedEventArgs;
    ref class WHget_TambientCompletedEventArgs;
    
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHcreateCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHcreateCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHinitCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHinitCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHsyncCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHsyncCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHcommitCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHcommitCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHtank_stateCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHtank_stateCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHpostsyncCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHpostsyncCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHset_time_to_transitionCompletedEventHandler(System::Object^  sender, System::ComponentModel::AsyncCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHset_current_model_and_load_stateCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHset_current_model_and_load_stateCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHdhdtCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHdhdtCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHactual_kWCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHactual_kWCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHnew_time_1nodeCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHnew_time_1nodeCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHnew_temp_1nodeCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHnew_temp_1nodeCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHnew_time_2zoneCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHnew_time_2zoneCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHnew_h_2zoneCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHnew_h_2zoneCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void WHget_TambientCompletedEventHandler(System::Object^  sender, WaterHeaterSvc::WHget_TambientCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::Web::Services::WebServiceBindingAttribute(Name=L"WHeaterImplSoap", Namespace=L"http://microsoft.com/webservices/")]
    public ref class WHeaterImpl : public System::Web::Services::Protocols::SoapHttpClientProtocol {
        
        private: System::Threading::SendOrPostCallback^  WHcreateOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHinitOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHsyncOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHcommitOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHtank_stateOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHpostsyncOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHset_time_to_transitionOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHset_current_model_and_load_stateOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHdhdtOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHactual_kWOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHnew_time_1nodeOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHnew_temp_1nodeOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHnew_time_2zoneOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHnew_h_2zoneOperationCompleted;
        
        private: System::Threading::SendOrPostCallback^  WHget_TambientOperationCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHcreateCompletedEventHandler^  WHcreateCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHinitCompletedEventHandler^  WHinitCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHsyncCompletedEventHandler^  WHsyncCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHcommitCompletedEventHandler^  WHcommitCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHtank_stateCompletedEventHandler^  WHtank_stateCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHpostsyncCompletedEventHandler^  WHpostsyncCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHset_time_to_transitionCompletedEventHandler^  WHset_time_to_transitionCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHset_current_model_and_load_stateCompletedEventHandler^  WHset_current_model_and_load_stateCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHdhdtCompletedEventHandler^  WHdhdtCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHactual_kWCompletedEventHandler^  WHactual_kWCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHnew_time_1nodeCompletedEventHandler^  WHnew_time_1nodeCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHnew_temp_1nodeCompletedEventHandler^  WHnew_temp_1nodeCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHnew_time_2zoneCompletedEventHandler^  WHnew_time_2zoneCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHnew_h_2zoneCompletedEventHandler^  WHnew_h_2zoneCompleted;
        
        /// <remarks/>
        public: event WaterHeaterSvc::WHget_TambientCompletedEventHandler^  WHget_TambientCompleted;
        
        /// <remarks/>
        public: WHeaterImpl();
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHcreate", RequestNamespace=L"http://microsoft.com/webservices/", 
            ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 WHcreate();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHcreate(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndWHcreate(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHcreateAsync();
        
        /// <remarks/>
        public: System::Void WHcreateAsync(System::Object^  userState);
        
        private: System::Void OnWHcreateOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHinit", RequestNamespace=L"http://microsoft.com/webservices/", 
            ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 WHinit();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHinit(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndWHinit(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHinitAsync();
        
        /// <remarks/>
        public: System::Void WHinitAsync(System::Object^  userState);
        
        private: System::Void OnWHinitOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHsync", RequestNamespace=L"http://microsoft.com/webservices/", 
            ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 WHsync(
                    System::Int32 t0, 
                    System::Int32 t1, 
                    System::Double heating_element_capacity, 
                    System::Double temperature, 
                    System::Double tank_setpoint, 
                    System::Double tank_UA, 
                    System::Double water_demand, 
                    System::Double tank_volume, 
                    System::Double thermostat_deadband);
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHsync(
                    System::Int32 t0, 
                    System::Int32 t1, 
                    System::Double heating_element_capacity, 
                    System::Double temperature, 
                    System::Double tank_setpoint, 
                    System::Double tank_UA, 
                    System::Double water_demand, 
                    System::Double tank_volume, 
                    System::Double thermostat_deadband, 
                    System::AsyncCallback^  callback, 
                    System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndWHsync(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHsyncAsync(
                    System::Int32 t0, 
                    System::Int32 t1, 
                    System::Double heating_element_capacity, 
                    System::Double temperature, 
                    System::Double tank_setpoint, 
                    System::Double tank_UA, 
                    System::Double water_demand, 
                    System::Double tank_volume, 
                    System::Double thermostat_deadband);
        
        /// <remarks/>
        public: System::Void WHsyncAsync(
                    System::Int32 t0, 
                    System::Int32 t1, 
                    System::Double heating_element_capacity, 
                    System::Double temperature, 
                    System::Double tank_setpoint, 
                    System::Double tank_UA, 
                    System::Double water_demand, 
                    System::Double tank_volume, 
                    System::Double thermostat_deadband, 
                    System::Object^  userState);
        
        private: System::Void OnWHsyncOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHcommit", RequestNamespace=L"http://microsoft.com/webservices/", 
            ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 WHcommit();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHcommit(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndWHcommit(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHcommitAsync();
        
        /// <remarks/>
        public: System::Void WHcommitAsync(System::Object^  userState);
        
        private: System::Void OnWHcommitOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHtank_state", 
            RequestNamespace=L"http://microsoft.com/webservices/", ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 WHtank_state();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHtank_state(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndWHtank_state(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHtank_stateAsync();
        
        /// <remarks/>
        public: System::Void WHtank_stateAsync(System::Object^  userState);
        
        private: System::Void OnWHtank_stateOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHpostsync", RequestNamespace=L"http://microsoft.com/webservices/", 
            ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 WHpostsync();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHpostsync(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndWHpostsync(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHpostsyncAsync();
        
        /// <remarks/>
        public: System::Void WHpostsyncAsync(System::Object^  userState);
        
        private: System::Void OnWHpostsyncOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHset_time_to_transition", 
            RequestNamespace=L"http://microsoft.com/webservices/", ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Void WHset_time_to_transition();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHset_time_to_transition(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Void EndWHset_time_to_transition(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHset_time_to_transitionAsync();
        
        /// <remarks/>
        public: System::Void WHset_time_to_transitionAsync(System::Object^  userState);
        
        private: System::Void OnWHset_time_to_transitionOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHset_current_model_and_load_state", 
            RequestNamespace=L"http://microsoft.com/webservices/", ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Int32 WHset_current_model_and_load_state();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHset_current_model_and_load_state(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Int32 EndWHset_current_model_and_load_state(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHset_current_model_and_load_stateAsync();
        
        /// <remarks/>
        public: System::Void WHset_current_model_and_load_stateAsync(System::Object^  userState);
        
        private: System::Void OnWHset_current_model_and_load_stateOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHdhdt", RequestNamespace=L"http://microsoft.com/webservices/", 
            ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Double WHdhdt(System::Double h);
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHdhdt(System::Double h, System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Double EndWHdhdt(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHdhdtAsync(System::Double h);
        
        /// <remarks/>
        public: System::Void WHdhdtAsync(System::Double h, System::Object^  userState);
        
        private: System::Void OnWHdhdtOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHactual_kW", RequestNamespace=L"http://microsoft.com/webservices/", 
            ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Double WHactual_kW();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHactual_kW(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Double EndWHactual_kW(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHactual_kWAsync();
        
        /// <remarks/>
        public: System::Void WHactual_kWAsync(System::Object^  userState);
        
        private: System::Void OnWHactual_kWOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHnew_time_1node", 
            RequestNamespace=L"http://microsoft.com/webservices/", ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Double WHnew_time_1node(System::Double T0, System::Double T1);
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHnew_time_1node(System::Double T0, System::Double T1, System::AsyncCallback^  callback, 
                    System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Double EndWHnew_time_1node(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHnew_time_1nodeAsync(System::Double T0, System::Double T1);
        
        /// <remarks/>
        public: System::Void WHnew_time_1nodeAsync(System::Double T0, System::Double T1, System::Object^  userState);
        
        private: System::Void OnWHnew_time_1nodeOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHnew_temp_1node", 
            RequestNamespace=L"http://microsoft.com/webservices/", ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Double WHnew_temp_1node(System::Double T0, System::Double delta_t);
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHnew_temp_1node(System::Double T0, System::Double delta_t, System::AsyncCallback^  callback, 
                    System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Double EndWHnew_temp_1node(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHnew_temp_1nodeAsync(System::Double T0, System::Double delta_t);
        
        /// <remarks/>
        public: System::Void WHnew_temp_1nodeAsync(System::Double T0, System::Double delta_t, System::Object^  userState);
        
        private: System::Void OnWHnew_temp_1nodeOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHnew_time_2zone", 
            RequestNamespace=L"http://microsoft.com/webservices/", ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Double WHnew_time_2zone(System::Double h0, System::Double h1);
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHnew_time_2zone(System::Double h0, System::Double h1, System::AsyncCallback^  callback, 
                    System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Double EndWHnew_time_2zone(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHnew_time_2zoneAsync(System::Double h0, System::Double h1);
        
        /// <remarks/>
        public: System::Void WHnew_time_2zoneAsync(System::Double h0, System::Double h1, System::Object^  userState);
        
        private: System::Void OnWHnew_time_2zoneOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHnew_h_2zone", 
            RequestNamespace=L"http://microsoft.com/webservices/", ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Double WHnew_h_2zone(System::Double h0, System::Double delta_t);
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHnew_h_2zone(System::Double h0, System::Double delta_t, System::AsyncCallback^  callback, 
                    System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Double EndWHnew_h_2zone(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHnew_h_2zoneAsync(System::Double h0, System::Double delta_t);
        
        /// <remarks/>
        public: System::Void WHnew_h_2zoneAsync(System::Double h0, System::Double delta_t, System::Object^  userState);
        
        private: System::Void OnWHnew_h_2zoneOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://microsoft.com/webservices/WHget_Tambient", 
            RequestNamespace=L"http://microsoft.com/webservices/", ResponseNamespace=L"http://microsoft.com/webservices/", Use=System::Web::Services::Description::SoapBindingUse::Literal, 
            ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Double WHget_Tambient();
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginWHget_Tambient(System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Double EndWHget_Tambient(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void WHget_TambientAsync();
        
        /// <remarks/>
        public: System::Void WHget_TambientAsync(System::Object^  userState);
        
        private: System::Void OnWHget_TambientOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: System::Void CancelAsync(System::Object^  userState) new;
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHcreateCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHcreateCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, System::Boolean cancelled, 
                    System::Object^  userState);
        /// <remarks/>
        public: property System::Int32 Result {
            System::Int32 get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHinitCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHinitCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, System::Boolean cancelled, 
                    System::Object^  userState);
        /// <remarks/>
        public: property System::Int32 Result {
            System::Int32 get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHsyncCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHsyncCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, System::Boolean cancelled, 
                    System::Object^  userState);
        /// <remarks/>
        public: property System::Int32 Result {
            System::Int32 get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHcommitCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHcommitCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, System::Boolean cancelled, 
                    System::Object^  userState);
        /// <remarks/>
        public: property System::Int32 Result {
            System::Int32 get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHtank_stateCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHtank_stateCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Int32 Result {
            System::Int32 get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHpostsyncCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHpostsyncCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, System::Boolean cancelled, 
                    System::Object^  userState);
        /// <remarks/>
        public: property System::Int32 Result {
            System::Int32 get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHset_current_model_and_load_stateCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHset_current_model_and_load_stateCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Int32 Result {
            System::Int32 get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHdhdtCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHdhdtCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, System::Boolean cancelled, 
                    System::Object^  userState);
        /// <remarks/>
        public: property System::Double Result {
            System::Double get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHactual_kWCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHactual_kWCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Double Result {
            System::Double get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHnew_time_1nodeCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHnew_time_1nodeCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Double Result {
            System::Double get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHnew_temp_1nodeCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHnew_temp_1nodeCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Double Result {
            System::Double get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHnew_time_2zoneCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHnew_time_2zoneCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Double Result {
            System::Double get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHnew_h_2zoneCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHnew_h_2zoneCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Double Result {
            System::Double get();
        }
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class WHget_TambientCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: WHget_TambientCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Double Result {
            System::Double get();
        }
    };
}
namespace WaterHeaterSvc {
    
    
    inline WHeaterImpl::WHeaterImpl() {
        this->Url = L"http://10.96.12.51/WaterHeaterWebSetup/WHeaterImpl.asmx";
    }
    
    inline System::Int32 WHeaterImpl::WHcreate() {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHcreate", gcnew cli::array< System::Object^  >(0));
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHcreate(System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHcreate", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Int32 WHeaterImpl::EndWHcreate(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHcreateAsync() {
        this->WHcreateAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHcreateAsync(System::Object^  userState) {
        if (this->WHcreateOperationCompleted == nullptr) {
            this->WHcreateOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHcreateOperationCompleted);
        }
        this->InvokeAsync(L"WHcreate", gcnew cli::array< System::Object^  >(0), this->WHcreateOperationCompleted, userState);
    }
    
    inline System::Void WHeaterImpl::OnWHcreateOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHcreateCompleted(this, (gcnew WaterHeaterSvc::WHcreateCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Int32 WHeaterImpl::WHinit() {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHinit", gcnew cli::array< System::Object^  >(0));
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHinit(System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHinit", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Int32 WHeaterImpl::EndWHinit(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHinitAsync() {
        this->WHinitAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHinitAsync(System::Object^  userState) {
        if (this->WHinitOperationCompleted == nullptr) {
            this->WHinitOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHinitOperationCompleted);
        }
        this->InvokeAsync(L"WHinit", gcnew cli::array< System::Object^  >(0), this->WHinitOperationCompleted, userState);
    }
    
    inline System::Void WHeaterImpl::OnWHinitOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHinitCompleted(this, (gcnew WaterHeaterSvc::WHinitCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Int32 WHeaterImpl::WHsync(
                System::Int32 t0, 
                System::Int32 t1, 
                System::Double heating_element_capacity, 
                System::Double temperature, 
                System::Double tank_setpoint, 
                System::Double tank_UA, 
                System::Double water_demand, 
                System::Double tank_volume, 
                System::Double thermostat_deadband) {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHsync", gcnew cli::array< System::Object^  >(9) {t0, t1, 
                heating_element_capacity, temperature, tank_setpoint, tank_UA, water_demand, tank_volume, thermostat_deadband});
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHsync(
                System::Int32 t0, 
                System::Int32 t1, 
                System::Double heating_element_capacity, 
                System::Double temperature, 
                System::Double tank_setpoint, 
                System::Double tank_UA, 
                System::Double water_demand, 
                System::Double tank_volume, 
                System::Double thermostat_deadband, 
                System::AsyncCallback^  callback, 
                System::Object^  asyncState) {
        return this->BeginInvoke(L"WHsync", gcnew cli::array< System::Object^  >(9) {t0, t1, heating_element_capacity, temperature, 
                tank_setpoint, tank_UA, water_demand, tank_volume, thermostat_deadband}, callback, asyncState);
    }
    
    inline System::Int32 WHeaterImpl::EndWHsync(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHsyncAsync(
                System::Int32 t0, 
                System::Int32 t1, 
                System::Double heating_element_capacity, 
                System::Double temperature, 
                System::Double tank_setpoint, 
                System::Double tank_UA, 
                System::Double water_demand, 
                System::Double tank_volume, 
                System::Double thermostat_deadband) {
        this->WHsyncAsync(t0, t1, heating_element_capacity, temperature, tank_setpoint, tank_UA, water_demand, tank_volume, thermostat_deadband, 
            nullptr);
    }
    
    inline System::Void WHeaterImpl::WHsyncAsync(
                System::Int32 t0, 
                System::Int32 t1, 
                System::Double heating_element_capacity, 
                System::Double temperature, 
                System::Double tank_setpoint, 
                System::Double tank_UA, 
                System::Double water_demand, 
                System::Double tank_volume, 
                System::Double thermostat_deadband, 
                System::Object^  userState) {
        if (this->WHsyncOperationCompleted == nullptr) {
            this->WHsyncOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHsyncOperationCompleted);
        }
        this->InvokeAsync(L"WHsync", gcnew cli::array< System::Object^  >(9) {t0, t1, heating_element_capacity, temperature, 
                tank_setpoint, tank_UA, water_demand, tank_volume, thermostat_deadband}, this->WHsyncOperationCompleted, userState);
    }
    
    inline System::Void WHeaterImpl::OnWHsyncOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHsyncCompleted(this, (gcnew WaterHeaterSvc::WHsyncCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Int32 WHeaterImpl::WHcommit() {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHcommit", gcnew cli::array< System::Object^  >(0));
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHcommit(System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHcommit", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Int32 WHeaterImpl::EndWHcommit(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHcommitAsync() {
        this->WHcommitAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHcommitAsync(System::Object^  userState) {
        if (this->WHcommitOperationCompleted == nullptr) {
            this->WHcommitOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHcommitOperationCompleted);
        }
        this->InvokeAsync(L"WHcommit", gcnew cli::array< System::Object^  >(0), this->WHcommitOperationCompleted, userState);
    }
    
    inline System::Void WHeaterImpl::OnWHcommitOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHcommitCompleted(this, (gcnew WaterHeaterSvc::WHcommitCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Int32 WHeaterImpl::WHtank_state() {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHtank_state", gcnew cli::array< System::Object^  >(0));
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHtank_state(System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHtank_state", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Int32 WHeaterImpl::EndWHtank_state(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHtank_stateAsync() {
        this->WHtank_stateAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHtank_stateAsync(System::Object^  userState) {
        if (this->WHtank_stateOperationCompleted == nullptr) {
            this->WHtank_stateOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHtank_stateOperationCompleted);
        }
        this->InvokeAsync(L"WHtank_state", gcnew cli::array< System::Object^  >(0), this->WHtank_stateOperationCompleted, userState);
    }
    
    inline System::Void WHeaterImpl::OnWHtank_stateOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHtank_stateCompleted(this, (gcnew WaterHeaterSvc::WHtank_stateCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Int32 WHeaterImpl::WHpostsync() {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHpostsync", gcnew cli::array< System::Object^  >(0));
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHpostsync(System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHpostsync", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Int32 WHeaterImpl::EndWHpostsync(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHpostsyncAsync() {
        this->WHpostsyncAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHpostsyncAsync(System::Object^  userState) {
        if (this->WHpostsyncOperationCompleted == nullptr) {
            this->WHpostsyncOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHpostsyncOperationCompleted);
        }
        this->InvokeAsync(L"WHpostsync", gcnew cli::array< System::Object^  >(0), this->WHpostsyncOperationCompleted, userState);
    }
    
    inline System::Void WHeaterImpl::OnWHpostsyncOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHpostsyncCompleted(this, (gcnew WaterHeaterSvc::WHpostsyncCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Void WHeaterImpl::WHset_time_to_transition() {
        this->Invoke(L"WHset_time_to_transition", gcnew cli::array< System::Object^  >(0));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHset_time_to_transition(System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHset_time_to_transition", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Void WHeaterImpl::EndWHset_time_to_transition(System::IAsyncResult^  asyncResult) {
        this->EndInvoke(asyncResult);
    }
    
    inline System::Void WHeaterImpl::WHset_time_to_transitionAsync() {
        this->WHset_time_to_transitionAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHset_time_to_transitionAsync(System::Object^  userState) {
        if (this->WHset_time_to_transitionOperationCompleted == nullptr) {
            this->WHset_time_to_transitionOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHset_time_to_transitionOperationCompleted);
        }
        this->InvokeAsync(L"WHset_time_to_transition", gcnew cli::array< System::Object^  >(0), this->WHset_time_to_transitionOperationCompleted, 
            userState);
    }
    
    inline System::Void WHeaterImpl::OnWHset_time_to_transitionOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHset_time_to_transitionCompleted(this, (gcnew System::ComponentModel::AsyncCompletedEventArgs(invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Int32 WHeaterImpl::WHset_current_model_and_load_state() {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHset_current_model_and_load_state", gcnew cli::array< System::Object^  >(0));
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHset_current_model_and_load_state(System::AsyncCallback^  callback, 
                System::Object^  asyncState) {
        return this->BeginInvoke(L"WHset_current_model_and_load_state", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Int32 WHeaterImpl::EndWHset_current_model_and_load_state(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Int32^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHset_current_model_and_load_stateAsync() {
        this->WHset_current_model_and_load_stateAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHset_current_model_and_load_stateAsync(System::Object^  userState) {
        if (this->WHset_current_model_and_load_stateOperationCompleted == nullptr) {
            this->WHset_current_model_and_load_stateOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHset_current_model_and_load_stateOperationCompleted);
        }
        this->InvokeAsync(L"WHset_current_model_and_load_state", gcnew cli::array< System::Object^  >(0), this->WHset_current_model_and_load_stateOperationCompleted, 
            userState);
    }
    
    inline System::Void WHeaterImpl::OnWHset_current_model_and_load_stateOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHset_current_model_and_load_stateCompleted(this, (gcnew WaterHeaterSvc::WHset_current_model_and_load_stateCompletedEventArgs(invokeArgs->Results, 
                    invokeArgs->Error, invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Double WHeaterImpl::WHdhdt(System::Double h) {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHdhdt", gcnew cli::array< System::Object^  >(1) {h});
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHdhdt(System::Double h, System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHdhdt", gcnew cli::array< System::Object^  >(1) {h}, callback, asyncState);
    }
    
    inline System::Double WHeaterImpl::EndWHdhdt(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHdhdtAsync(System::Double h) {
        this->WHdhdtAsync(h, nullptr);
    }
    
    inline System::Void WHeaterImpl::WHdhdtAsync(System::Double h, System::Object^  userState) {
        if (this->WHdhdtOperationCompleted == nullptr) {
            this->WHdhdtOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHdhdtOperationCompleted);
        }
        this->InvokeAsync(L"WHdhdt", gcnew cli::array< System::Object^  >(1) {h}, this->WHdhdtOperationCompleted, userState);
    }
    
    inline System::Void WHeaterImpl::OnWHdhdtOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHdhdtCompleted(this, (gcnew WaterHeaterSvc::WHdhdtCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Double WHeaterImpl::WHactual_kW() {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHactual_kW", gcnew cli::array< System::Object^  >(0));
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHactual_kW(System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHactual_kW", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Double WHeaterImpl::EndWHactual_kW(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHactual_kWAsync() {
        this->WHactual_kWAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHactual_kWAsync(System::Object^  userState) {
        if (this->WHactual_kWOperationCompleted == nullptr) {
            this->WHactual_kWOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHactual_kWOperationCompleted);
        }
        this->InvokeAsync(L"WHactual_kW", gcnew cli::array< System::Object^  >(0), this->WHactual_kWOperationCompleted, userState);
    }
    
    inline System::Void WHeaterImpl::OnWHactual_kWOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHactual_kWCompleted(this, (gcnew WaterHeaterSvc::WHactual_kWCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Double WHeaterImpl::WHnew_time_1node(System::Double T0, System::Double T1) {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHnew_time_1node", gcnew cli::array< System::Object^  >(2) {T0, 
                T1});
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHnew_time_1node(System::Double T0, System::Double T1, System::AsyncCallback^  callback, 
                System::Object^  asyncState) {
        return this->BeginInvoke(L"WHnew_time_1node", gcnew cli::array< System::Object^  >(2) {T0, T1}, callback, asyncState);
    }
    
    inline System::Double WHeaterImpl::EndWHnew_time_1node(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHnew_time_1nodeAsync(System::Double T0, System::Double T1) {
        this->WHnew_time_1nodeAsync(T0, T1, nullptr);
    }
    
    inline System::Void WHeaterImpl::WHnew_time_1nodeAsync(System::Double T0, System::Double T1, System::Object^  userState) {
        if (this->WHnew_time_1nodeOperationCompleted == nullptr) {
            this->WHnew_time_1nodeOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHnew_time_1nodeOperationCompleted);
        }
        this->InvokeAsync(L"WHnew_time_1node", gcnew cli::array< System::Object^  >(2) {T0, T1}, this->WHnew_time_1nodeOperationCompleted, 
            userState);
    }
    
    inline System::Void WHeaterImpl::OnWHnew_time_1nodeOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHnew_time_1nodeCompleted(this, (gcnew WaterHeaterSvc::WHnew_time_1nodeCompletedEventArgs(invokeArgs->Results, 
                    invokeArgs->Error, invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Double WHeaterImpl::WHnew_temp_1node(System::Double T0, System::Double delta_t) {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHnew_temp_1node", gcnew cli::array< System::Object^  >(2) {T0, 
                delta_t});
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHnew_temp_1node(System::Double T0, System::Double delta_t, System::AsyncCallback^  callback, 
                System::Object^  asyncState) {
        return this->BeginInvoke(L"WHnew_temp_1node", gcnew cli::array< System::Object^  >(2) {T0, delta_t}, callback, asyncState);
    }
    
    inline System::Double WHeaterImpl::EndWHnew_temp_1node(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHnew_temp_1nodeAsync(System::Double T0, System::Double delta_t) {
        this->WHnew_temp_1nodeAsync(T0, delta_t, nullptr);
    }
    
    inline System::Void WHeaterImpl::WHnew_temp_1nodeAsync(System::Double T0, System::Double delta_t, System::Object^  userState) {
        if (this->WHnew_temp_1nodeOperationCompleted == nullptr) {
            this->WHnew_temp_1nodeOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHnew_temp_1nodeOperationCompleted);
        }
        this->InvokeAsync(L"WHnew_temp_1node", gcnew cli::array< System::Object^  >(2) {T0, delta_t}, this->WHnew_temp_1nodeOperationCompleted, 
            userState);
    }
    
    inline System::Void WHeaterImpl::OnWHnew_temp_1nodeOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHnew_temp_1nodeCompleted(this, (gcnew WaterHeaterSvc::WHnew_temp_1nodeCompletedEventArgs(invokeArgs->Results, 
                    invokeArgs->Error, invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Double WHeaterImpl::WHnew_time_2zone(System::Double h0, System::Double h1) {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHnew_time_2zone", gcnew cli::array< System::Object^  >(2) {h0, 
                h1});
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHnew_time_2zone(System::Double h0, System::Double h1, System::AsyncCallback^  callback, 
                System::Object^  asyncState) {
        return this->BeginInvoke(L"WHnew_time_2zone", gcnew cli::array< System::Object^  >(2) {h0, h1}, callback, asyncState);
    }
    
    inline System::Double WHeaterImpl::EndWHnew_time_2zone(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHnew_time_2zoneAsync(System::Double h0, System::Double h1) {
        this->WHnew_time_2zoneAsync(h0, h1, nullptr);
    }
    
    inline System::Void WHeaterImpl::WHnew_time_2zoneAsync(System::Double h0, System::Double h1, System::Object^  userState) {
        if (this->WHnew_time_2zoneOperationCompleted == nullptr) {
            this->WHnew_time_2zoneOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHnew_time_2zoneOperationCompleted);
        }
        this->InvokeAsync(L"WHnew_time_2zone", gcnew cli::array< System::Object^  >(2) {h0, h1}, this->WHnew_time_2zoneOperationCompleted, 
            userState);
    }
    
    inline System::Void WHeaterImpl::OnWHnew_time_2zoneOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHnew_time_2zoneCompleted(this, (gcnew WaterHeaterSvc::WHnew_time_2zoneCompletedEventArgs(invokeArgs->Results, 
                    invokeArgs->Error, invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Double WHeaterImpl::WHnew_h_2zone(System::Double h0, System::Double delta_t) {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHnew_h_2zone", gcnew cli::array< System::Object^  >(2) {h0, 
                delta_t});
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHnew_h_2zone(System::Double h0, System::Double delta_t, System::AsyncCallback^  callback, 
                System::Object^  asyncState) {
        return this->BeginInvoke(L"WHnew_h_2zone", gcnew cli::array< System::Object^  >(2) {h0, delta_t}, callback, asyncState);
    }
    
    inline System::Double WHeaterImpl::EndWHnew_h_2zone(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHnew_h_2zoneAsync(System::Double h0, System::Double delta_t) {
        this->WHnew_h_2zoneAsync(h0, delta_t, nullptr);
    }
    
    inline System::Void WHeaterImpl::WHnew_h_2zoneAsync(System::Double h0, System::Double delta_t, System::Object^  userState) {
        if (this->WHnew_h_2zoneOperationCompleted == nullptr) {
            this->WHnew_h_2zoneOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHnew_h_2zoneOperationCompleted);
        }
        this->InvokeAsync(L"WHnew_h_2zone", gcnew cli::array< System::Object^  >(2) {h0, delta_t}, this->WHnew_h_2zoneOperationCompleted, 
            userState);
    }
    
    inline System::Void WHeaterImpl::OnWHnew_h_2zoneOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHnew_h_2zoneCompleted(this, (gcnew WaterHeaterSvc::WHnew_h_2zoneCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Double WHeaterImpl::WHget_Tambient() {
        cli::array< System::Object^  >^  results = this->Invoke(L"WHget_Tambient", gcnew cli::array< System::Object^  >(0));
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::IAsyncResult^  WHeaterImpl::BeginWHget_Tambient(System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"WHget_Tambient", gcnew cli::array< System::Object^  >(0), callback, asyncState);
    }
    
    inline System::Double WHeaterImpl::EndWHget_Tambient(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (*cli::safe_cast<System::Double^>(results[0]));
    }
    
    inline System::Void WHeaterImpl::WHget_TambientAsync() {
        this->WHget_TambientAsync(nullptr);
    }
    
    inline System::Void WHeaterImpl::WHget_TambientAsync(System::Object^  userState) {
        if (this->WHget_TambientOperationCompleted == nullptr) {
            this->WHget_TambientOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &WaterHeaterSvc::WHeaterImpl::OnWHget_TambientOperationCompleted);
        }
        this->InvokeAsync(L"WHget_Tambient", gcnew cli::array< System::Object^  >(0), this->WHget_TambientOperationCompleted, 
            userState);
    }
    
    inline System::Void WHeaterImpl::OnWHget_TambientOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->WHget_TambientCompleted(this, (gcnew WaterHeaterSvc::WHget_TambientCompletedEventArgs(invokeArgs->Results, 
                    invokeArgs->Error, invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Void WHeaterImpl::CancelAsync(System::Object^  userState) {
        __super::CancelAsync(userState);
    }
    
    
    inline WHcreateCompletedEventArgs::WHcreateCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Int32 WHcreateCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Int32^>(this->results[0]));
    }
    
    
    inline WHinitCompletedEventArgs::WHinitCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Int32 WHinitCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Int32^>(this->results[0]));
    }
    
    
    inline WHsyncCompletedEventArgs::WHsyncCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Int32 WHsyncCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Int32^>(this->results[0]));
    }
    
    
    inline WHcommitCompletedEventArgs::WHcommitCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Int32 WHcommitCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Int32^>(this->results[0]));
    }
    
    
    inline WHtank_stateCompletedEventArgs::WHtank_stateCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Int32 WHtank_stateCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Int32^>(this->results[0]));
    }
    
    
    inline WHpostsyncCompletedEventArgs::WHpostsyncCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Int32 WHpostsyncCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Int32^>(this->results[0]));
    }
    
    
    inline WHset_current_model_and_load_stateCompletedEventArgs::WHset_current_model_and_load_stateCompletedEventArgs(cli::array< System::Object^  >^  results, 
                System::Exception^  exception, System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Int32 WHset_current_model_and_load_stateCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Int32^>(this->results[0]));
    }
    
    
    inline WHdhdtCompletedEventArgs::WHdhdtCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Double WHdhdtCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Double^>(this->results[0]));
    }
    
    
    inline WHactual_kWCompletedEventArgs::WHactual_kWCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Double WHactual_kWCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Double^>(this->results[0]));
    }
    
    
    inline WHnew_time_1nodeCompletedEventArgs::WHnew_time_1nodeCompletedEventArgs(cli::array< System::Object^  >^  results, 
                System::Exception^  exception, System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Double WHnew_time_1nodeCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Double^>(this->results[0]));
    }
    
    
    inline WHnew_temp_1nodeCompletedEventArgs::WHnew_temp_1nodeCompletedEventArgs(cli::array< System::Object^  >^  results, 
                System::Exception^  exception, System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Double WHnew_temp_1nodeCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Double^>(this->results[0]));
    }
    
    
    inline WHnew_time_2zoneCompletedEventArgs::WHnew_time_2zoneCompletedEventArgs(cli::array< System::Object^  >^  results, 
                System::Exception^  exception, System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Double WHnew_time_2zoneCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Double^>(this->results[0]));
    }
    
    
    inline WHnew_h_2zoneCompletedEventArgs::WHnew_h_2zoneCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Double WHnew_h_2zoneCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Double^>(this->results[0]));
    }
    
    
    inline WHget_TambientCompletedEventArgs::WHget_TambientCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Double WHget_TambientCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (*cli::safe_cast<System::Double^>(this->results[0]));
    }
}
